% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generics.R
\name{write_csv.default}
\alias{write_csv.default}
\title{Write a data frame to a delimited file}
\usage{
\method{write_csv}{default}(...)
}
\arguments{
\item{...}{dot-dot-dot}
}
\value{
\code{write_*()} returns the input \code{x} invisibly.
}
\description{
This is about twice as fast as \code{\link[=write.csv]{write.csv()}}, and never
writes row names. \code{output_column()} is a generic method used to coerce
columns to suitable output.
}
\section{Output}{


Factors are coerced to character. Doubles are formatted using the grisu3
algorithm. POSIXct's are formatted as ISO8601 with a UTC timezone \emph{Note:
\code{POSIXct} objects in local or non-UTC timezones will be converted to UTC time
before writing.}

All columns are encoded as UTF-8. \code{write_excel_csv()} and \code{write_excel_csv2()} also include a
\href{{https://en.wikipedia.org/wiki/Byte_order_mark}{UTF-8 Byte order mark}}
which indicates to Excel the csv is UTF-8 encoded.

\code{write_excel_csv2()} and \code{write_csv2} were created to allow users with
different locale settings save csv files with their default settings \code{;} as
column separator and \code{,} as decimal separator. This is common in some European countries.

Values are only quoted if needed: if they contain a comma, quote or newline.

The \code{write_*()} functions will automatically compress outputs if an appropriate extension is given. At present, three
extensions are supported, \code{.gz} for gzip compression, \code{.bz2} for bzip2 compression and \code{.xz} for lzma compression.  See
the examples for more information.

}

\examples{
tmp <- tempfile()
write_csv(mtcars, tmp)
head(read_csv(tmp))

# format_* is useful for testing and reprexes
cat(format_csv(head(mtcars)))
cat(format_tsv(head(mtcars)))
cat(format_delim(head(mtcars), ";"))

df <- data.frame(x = c(1, 2, NA))
format_csv(df, na = ".")

# Quotes are automatically as needed
df <- data.frame(x = c("a", '"', ",", "\n"))
cat(format_csv(df))

# A output connection will be automatically created for output filenames
# with appropriate extensions.
dir <- tempdir()
write_tsv(mtcars, file.path(dir, "mtcars.tsv.gz"))
write_tsv(mtcars, file.path(dir, "mtcars.tsv.bz2"))
write_tsv(mtcars, file.path(dir, "mtcars.tsv.xz"))
}
\references{
Florian Loitsch, Printing Floating-Point Numbers Quickly and
Accurately with Integers, PLDI '10,
\url{http://www.cs.tufts.edu/~nr/cs257/archive/florian-loitsch/printf.pdf}
}
